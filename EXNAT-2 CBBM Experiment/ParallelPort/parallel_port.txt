Install driver:

http://www.cogsci.nl/forum/index.php?p=/discussion/177/solved-sending-trigger/p1

http://stackoverflow.com/questions/26762015/psychopy-sending-triggers-on-64bit-os/26889541#26889541

http://www.xlentelectronics.nl/LPTTest/LPTTestUtilx64r.htm

http://discourse.psychopy.org/t/cant-send-trigger-during-first-500ms-of-a-2750ms-trial/744/5

http://discourse.psychopy.org/t/cannot-send-a-signal-via-parallelport-using-psychopy-on-windows7-64bit/969

Jonas code:

try:
    from ctypes import windll
    global io
    io = windll.dlportio
    port = 0x378
    def send_trigger(x):
        io.DlPortWritePortUchar(port, 0)
        io.DlPortWritePortUchar(port, x)
        core.wait(0.001)
        io.DlPortWritePortUchar(port, 0)
except ImportError:
    def send_trigger(x):
        print(x)
    
---------------------



        
---------------------
Mario's code:

def sendTrigger(triggerCode):
    try:
        windll.inpout32.Out32(portaddress, triggerCode)
        self.wait(0.05)
        windll.inpout32.Out32(portaddress, 0)
    except RuntimeError: print "Trigger \"" + str(triggerCode) + "\" could not be sent"
    except WindowsError: print "inpout32.dll couldn't be found"

-----------------------------
Johannes Code, using windll and dlportio.dll

# Generated by OpenSesame 0.26 (Earnest Einstein)
# Tue Aug 28 21:56:16 2012 (posix)
# 
# Copyright Sebastiaan Mathot (2010-2011)
# <http://www.cogsci.nl>
# 
set foreground "white"
set subject_parity "even"
set description "To try to find out whether converting the triggers to ubytes makes any difference."
set title "Test Triggers Johannes"
set sampler_backend "legacy"
set coordinates "relative"
set height "768"
set mouse_backend "psycho"
set width "1024"
set compensation "0"
set keyboard_backend "psycho"
set background "black"
set subject_nr "0"
set canvas_backend "psycho"
set start "experiment"
set synth_backend "legacy"

define loop block_loop
	set repeat "1"
	set description "A single block of trials"
	set item "trial_sequence"
	set column_order ""
	set cycles "1"
	set order "random"
	run trial_sequence

define inline_script triggers
	set _run ""
	___prepare__
	# Define io:
	try:
		from ctypes import windll
		io = windll.dlportio # requires dlportio.dll !!!
	except:
		print 'The parallel port could not be opened'
	
	# Define port:
	port = 0x4cf8 
	
	# Import another module from ctypes, which we need for converting to ubytes:
	from ctypes import c_ubyte
	
	# Execute the script below twice, once in the old way, once in the
	# newly-suggested way:
	
	for change_to_ubyte in (False, True):
	
		# Send the trigger for all values between 0 and 255:
		for trigger in range(0,256):
			
			# In the second run, change trigger to ubyte:
			if change_to_ubyte:
				trigger = c_ubyte(trigger)
	
			try:
				io.DlPortWritePortUchar(port, trigger)
			except:
				print 'Failed to send trigger!'
				
			# And also log the sent trigger to the OpenSesame log file:
			self.experiment.log(trigger)
	__end__
	set description "Executes Python code"

define sequence trial_sequence
	set flush_keyboard "yes"
	set description "A single trial"
	run inline_script "always"

define loop experimental_loop
	set repeat "1"
	set description "A loop containing one or more experimental blocks"
	set skip "0"
	set offset "no"
	set item "block_sequence"
	set column_order "convert_to_ubyte"
	set cycles "2"
	set order "random"
	setcycle 0 convert_to_ubyte "True"
	setcycle 1 convert_to_ubyte "False"
	run block_sequence

define sequence experiment
	set flush_keyboard "yes"
	set description "The main sequence of the experiment"
	run triggers "always"

define inline_script inline_script
	set _run ""
	___prepare__
	global io
	
	
	port = 0x4cf8 
	try:
		io.DlPortWritePortUchar(port, trigger)
	except:
		print 'Failed to send trigger!'
	__end__
	set description "Executes Python code"

define sequence block_sequence
	set flush_keyboard "yes"
	set description "A sequence containing a single block of trials followed by feedback to the participant"
	run block_loop "always"
	
	
	